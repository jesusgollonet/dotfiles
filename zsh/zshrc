#!/bin/zsh
# zmodload zsh/zprof

fpath+=("$(brew --prefix)/share/zsh/site-functions")
autoload -Uz promptinit
promptinit
prompt pure

autoload -Uz compinit
# Optimize compinit with caching - only rebuild if dump is older than 24h
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

# history search with arrows 
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# Enable Ctrl-x-e to edit command line
autoload -U edit-command-line
# # Emacs style
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line

# ignore case in completion
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}'

. ~/.dotfiles/zsh/keys
. ~/.dotfiles/zsh/functions
. ~/.dotfiles/zsh/setopt

HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.history

# add bin to path
export PATH=~/.bin:$PATH
export PATH=~/.dotfiles/bin:$PATH

#source ~/.dotfiles/zsh/lib/zsh-git-prompt/zshrc.sh
# an example prompt
PROMPT='%B%#%b '
# enable fzf
source <(fzf --zsh)
# note in order for key commands to work on fzf we need to $(brew --prefix)/opt/fzf/install
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Move next only if `homebrew` is installed
if command -v brew >/dev/null 2>&1; then
    # Load rupa's z if installed
    [ -f $(brew --prefix)/etc/profile.d/z.sh ] && source $(brew --prefix)/etc/profile.d/z.sh
fi

# Setting ag as the default source for fzf
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# Mosh needs locale 
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
#
export EDITOR=vim 

# gh cli needs needs a style to be visible in dark mode  (markdown renderer is glamour)
export GLAMOUR_STYLE=dracula

export NVM_DIR="$HOME/.nvm"
# Lazy-load NVM - only loads when nvm command is used
nvm() {
    unset -f nvm
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    nvm "$@"
}

# Lazy-load atuin - only loads when atuin command is used
atuin() {
    unset -f atuin
    eval "$(command atuin init zsh)"
    atuin "$@"
}

[ -f "/Users/jgb/.ghcup/env" ] && . "/Users/jgb/.ghcup/env" # ghcup-env

export DENO_INSTALL="/Users/jgb/.deno"
export PATH="$DENO_INSTALL/bin:$PATH"

# Lazy-load direnv - only loads when direnv command is used or entering directories with .envrc
direnv() {
    unset -f direnv
    eval "$(command direnv hook zsh)"
    direnv "$@"
}

# pnpm
export PNPM_HOME="/Users/jgb/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/jgb/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/jgb/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/jgb/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/jgb/google-cloud-sdk/completion.zsh.inc'; fi

# bun completions
[ -s "/Users/jgb/.bun/_bun" ] && source "/Users/jgb/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# Lazy-load pyenv - only loads when python/pyenv commands are used
pyenv() {
    unset -f pyenv python pip
    eval "$(command pyenv init - zsh)"
    pyenv "$@"
}
python() {
    unset -f pyenv python pip
    eval "$(command pyenv init - zsh)"
    python "$@"
}
pip() {
    unset -f pyenv python pip
    eval "$(command pyenv init - zsh)" 
    pip "$@"
}

# opencode
export PATH=/Users/jgb/.opencode/bin:$PATH
# zprof
